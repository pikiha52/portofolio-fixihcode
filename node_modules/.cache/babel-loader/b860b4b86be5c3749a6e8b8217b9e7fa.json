{"ast":null,"code":"\"use strict\"; // Copyright 2021 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ExternalAccountClient = void 0;\n\nconst baseexternalclient_1 = require(\"./baseexternalclient\");\n\nconst identitypoolclient_1 = require(\"./identitypoolclient\");\n\nconst awsclient_1 = require(\"./awsclient\");\n\nconst pluggable_auth_client_1 = require(\"./pluggable-auth-client\");\n/**\n * Dummy class with no constructor. Developers are expected to use fromJSON.\n */\n\n\nclass ExternalAccountClient {\n  constructor() {\n    throw new Error('ExternalAccountClients should be initialized via: ' + 'ExternalAccountClient.fromJSON(), ' + 'directly via explicit constructors, eg. ' + 'new AwsClient(options), new IdentityPoolClient(options), new' + 'PluggableAuthClientOptions, or via ' + 'new GoogleAuth(options).getClient()');\n  }\n  /**\n   * This static method will instantiate the\n   * corresponding type of external account credential depending on the\n   * underlying credential source.\n   * @param options The external account options object typically loaded\n   *   from the external account JSON credential file.\n   * @param additionalOptions **DEPRECATED, all options are available in the\n   *   `options` parameter.** Optional additional behavior customization options.\n   *   These currently customize expiration threshold time and whether to retry\n   *   on 401/403 API request errors.\n   * @return A BaseExternalAccountClient instance or null if the options\n   *   provided do not correspond to an external account credential.\n   */\n\n\n  static fromJSON(options, additionalOptions) {\n    var _a, _b;\n\n    if (options && options.type === baseexternalclient_1.EXTERNAL_ACCOUNT_TYPE) {\n      if ((_a = options.credential_source) === null || _a === void 0 ? void 0 : _a.environment_id) {\n        return new awsclient_1.AwsClient(options, additionalOptions);\n      } else if ((_b = options.credential_source) === null || _b === void 0 ? void 0 : _b.executable) {\n        return new pluggable_auth_client_1.PluggableAuthClient(options, additionalOptions);\n      } else {\n        return new identitypoolclient_1.IdentityPoolClient(options, additionalOptions);\n      }\n    } else {\n      return null;\n    }\n  }\n\n}\n\nexports.ExternalAccountClient = ExternalAccountClient;","map":{"version":3,"sources":["/Users/fikihalan/Documents/source/frontend/portofolio-fixihcode/node_modules/google-auth-library/build/src/auth/externalclient.js"],"names":["Object","defineProperty","exports","value","ExternalAccountClient","baseexternalclient_1","require","identitypoolclient_1","awsclient_1","pluggable_auth_client_1","constructor","Error","fromJSON","options","additionalOptions","_a","_b","type","EXTERNAL_ACCOUNT_TYPE","credential_source","environment_id","AwsClient","executable","PluggableAuthClient","IdentityPoolClient"],"mappings":"AAAA,a,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,qBAAR,GAAgC,KAAK,CAArC;;AACA,MAAMC,oBAAoB,GAAGC,OAAO,CAAC,sBAAD,CAApC;;AACA,MAAMC,oBAAoB,GAAGD,OAAO,CAAC,sBAAD,CAApC;;AACA,MAAME,WAAW,GAAGF,OAAO,CAAC,aAAD,CAA3B;;AACA,MAAMG,uBAAuB,GAAGH,OAAO,CAAC,yBAAD,CAAvC;AACA;AACA;AACA;;;AACA,MAAMF,qBAAN,CAA4B;AACxBM,EAAAA,WAAW,GAAG;AACV,UAAM,IAAIC,KAAJ,CAAU,uDACZ,oCADY,GAEZ,0CAFY,GAGZ,8DAHY,GAIZ,qCAJY,GAKZ,qCALE,CAAN;AAMH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACmB,SAARC,QAAQ,CAACC,OAAD,EAAUC,iBAAV,EAA6B;AACxC,QAAIC,EAAJ,EAAQC,EAAR;;AACA,QAAIH,OAAO,IAAIA,OAAO,CAACI,IAAR,KAAiBZ,oBAAoB,CAACa,qBAArD,EAA4E;AACxE,UAAI,CAACH,EAAE,GAAGF,OAAO,CAACM,iBAAd,MAAqC,IAArC,IAA6CJ,EAAE,KAAK,KAAK,CAAzD,GAA6D,KAAK,CAAlE,GAAsEA,EAAE,CAACK,cAA7E,EAA6F;AACzF,eAAO,IAAIZ,WAAW,CAACa,SAAhB,CAA0BR,OAA1B,EAAmCC,iBAAnC,CAAP;AACH,OAFD,MAGK,IAAI,CAACE,EAAE,GAAGH,OAAO,CAACM,iBAAd,MAAqC,IAArC,IAA6CH,EAAE,KAAK,KAAK,CAAzD,GAA6D,KAAK,CAAlE,GAAsEA,EAAE,CAACM,UAA7E,EAAyF;AAC1F,eAAO,IAAIb,uBAAuB,CAACc,mBAA5B,CAAgDV,OAAhD,EAAyDC,iBAAzD,CAAP;AACH,OAFI,MAGA;AACD,eAAO,IAAIP,oBAAoB,CAACiB,kBAAzB,CAA4CX,OAA5C,EAAqDC,iBAArD,CAAP;AACH;AACJ,KAVD,MAWK;AACD,aAAO,IAAP;AACH;AACJ;;AAtCuB;;AAwC5BZ,OAAO,CAACE,qBAAR,GAAgCA,qBAAhC","sourcesContent":["\"use strict\";\n// Copyright 2021 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ExternalAccountClient = void 0;\nconst baseexternalclient_1 = require(\"./baseexternalclient\");\nconst identitypoolclient_1 = require(\"./identitypoolclient\");\nconst awsclient_1 = require(\"./awsclient\");\nconst pluggable_auth_client_1 = require(\"./pluggable-auth-client\");\n/**\n * Dummy class with no constructor. Developers are expected to use fromJSON.\n */\nclass ExternalAccountClient {\n    constructor() {\n        throw new Error('ExternalAccountClients should be initialized via: ' +\n            'ExternalAccountClient.fromJSON(), ' +\n            'directly via explicit constructors, eg. ' +\n            'new AwsClient(options), new IdentityPoolClient(options), new' +\n            'PluggableAuthClientOptions, or via ' +\n            'new GoogleAuth(options).getClient()');\n    }\n    /**\n     * This static method will instantiate the\n     * corresponding type of external account credential depending on the\n     * underlying credential source.\n     * @param options The external account options object typically loaded\n     *   from the external account JSON credential file.\n     * @param additionalOptions **DEPRECATED, all options are available in the\n     *   `options` parameter.** Optional additional behavior customization options.\n     *   These currently customize expiration threshold time and whether to retry\n     *   on 401/403 API request errors.\n     * @return A BaseExternalAccountClient instance or null if the options\n     *   provided do not correspond to an external account credential.\n     */\n    static fromJSON(options, additionalOptions) {\n        var _a, _b;\n        if (options && options.type === baseexternalclient_1.EXTERNAL_ACCOUNT_TYPE) {\n            if ((_a = options.credential_source) === null || _a === void 0 ? void 0 : _a.environment_id) {\n                return new awsclient_1.AwsClient(options, additionalOptions);\n            }\n            else if ((_b = options.credential_source) === null || _b === void 0 ? void 0 : _b.executable) {\n                return new pluggable_auth_client_1.PluggableAuthClient(options, additionalOptions);\n            }\n            else {\n                return new identitypoolclient_1.IdentityPoolClient(options, additionalOptions);\n            }\n        }\n        else {\n            return null;\n        }\n    }\n}\nexports.ExternalAccountClient = ExternalAccountClient;\n"]},"metadata":{},"sourceType":"script"}