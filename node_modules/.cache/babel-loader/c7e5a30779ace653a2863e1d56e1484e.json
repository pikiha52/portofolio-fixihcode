{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Agent = void 0;\n\nconst net = __importStar(require(\"net\"));\n\nconst http = __importStar(require(\"http\"));\n\nconst https_1 = require(\"https\");\n\n__exportStar(require(\"./helpers\"), exports);\n\nconst INTERNAL = Symbol('AgentBaseInternalState');\n\nclass Agent extends http.Agent {\n  constructor(opts) {\n    super(opts);\n    this[INTERNAL] = {};\n  }\n  /**\n   * Determine whether this is an `http` or `https` request.\n   */\n\n\n  isSecureEndpoint(options) {\n    if (options) {\n      // First check the `secureEndpoint` property explicitly, since this\n      // means that a parent `Agent` is \"passing through\" to this instance.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      if (typeof options.secureEndpoint === 'boolean') {\n        return options.secureEndpoint;\n      } // If no explicit `secure` endpoint, check if `protocol` property is\n      // set. This will usually be the case since using a full string URL\n      // or `URL` instance should be the most common usage.\n\n\n      if (typeof options.protocol === 'string') {\n        return options.protocol === 'https:';\n      }\n    } // Finally, if no `protocol` property was set, then fall back to\n    // checking the stack trace of the current call stack, and try to\n    // detect the \"https\" module.\n\n\n    const {\n      stack\n    } = new Error();\n    if (typeof stack !== 'string') return false;\n    return stack.split('\\n').some(l => l.indexOf('(https.js:') !== -1 || l.indexOf('node:https:') !== -1);\n  } // In order to support async signatures in `connect()` and Node's native\n  // connection pooling in `http.Agent`, the array of sockets for each origin\n  // has to be updated synchronously. This is so the length of the array is\n  // accurate when `addRequest()` is next called. We achieve this by creating a\n  // fake socket and adding it to `sockets[origin]` and incrementing\n  // `totalSocketCount`.\n\n\n  incrementSockets(name) {\n    // If `maxSockets` and `maxTotalSockets` are both Infinity then there is no\n    // need to create a fake socket because Node.js native connection pooling\n    // will never be invoked.\n    if (this.maxSockets === Infinity && this.maxTotalSockets === Infinity) {\n      return null;\n    } // All instances of `sockets` are expected TypeScript errors. The\n    // alternative is to add it as a private property of this class but that\n    // will break TypeScript subclassing.\n\n\n    if (!this.sockets[name]) {\n      // @ts-expect-error `sockets` is readonly in `@types/node`\n      this.sockets[name] = [];\n    }\n\n    const fakeSocket = new net.Socket({\n      writable: false\n    });\n    this.sockets[name].push(fakeSocket); // @ts-expect-error `totalSocketCount` isn't defined in `@types/node`\n\n    this.totalSocketCount++;\n    return fakeSocket;\n  }\n\n  decrementSockets(name, socket) {\n    if (!this.sockets[name] || socket === null) {\n      return;\n    }\n\n    const sockets = this.sockets[name];\n    const index = sockets.indexOf(socket);\n\n    if (index !== -1) {\n      sockets.splice(index, 1); // @ts-expect-error  `totalSocketCount` isn't defined in `@types/node`\n\n      this.totalSocketCount--;\n\n      if (sockets.length === 0) {\n        // @ts-expect-error `sockets` is readonly in `@types/node`\n        delete this.sockets[name];\n      }\n    }\n  } // In order to properly update the socket pool, we need to call `getName()` on\n  // the core `https.Agent` if it is a secureEndpoint.\n\n\n  getName(options) {\n    const secureEndpoint = typeof options.secureEndpoint === 'boolean' ? options.secureEndpoint : this.isSecureEndpoint(options);\n\n    if (secureEndpoint) {\n      // @ts-expect-error `getName()` isn't defined in `@types/node`\n      return https_1.Agent.prototype.getName.call(this, options);\n    } // @ts-expect-error `getName()` isn't defined in `@types/node`\n\n\n    return super.getName(options);\n  }\n\n  createSocket(req, options, cb) {\n    const connectOpts = { ...options,\n      secureEndpoint: this.isSecureEndpoint(options)\n    };\n    const name = this.getName(connectOpts);\n    const fakeSocket = this.incrementSockets(name);\n    Promise.resolve().then(() => this.connect(req, connectOpts)).then(socket => {\n      this.decrementSockets(name, fakeSocket);\n\n      if (socket instanceof http.Agent) {\n        // @ts-expect-error `addRequest()` isn't defined in `@types/node`\n        return socket.addRequest(req, connectOpts);\n      }\n\n      this[INTERNAL].currentSocket = socket; // @ts-expect-error `createSocket()` isn't defined in `@types/node`\n\n      super.createSocket(req, options, cb);\n    }, err => {\n      this.decrementSockets(name, fakeSocket);\n      cb(err);\n    });\n  }\n\n  createConnection() {\n    const socket = this[INTERNAL].currentSocket;\n    this[INTERNAL].currentSocket = undefined;\n\n    if (!socket) {\n      throw new Error('No socket was returned in the `connect()` function');\n    }\n\n    return socket;\n  }\n\n  get defaultPort() {\n    return this[INTERNAL].defaultPort ?? (this.protocol === 'https:' ? 443 : 80);\n  }\n\n  set defaultPort(v) {\n    if (this[INTERNAL]) {\n      this[INTERNAL].defaultPort = v;\n    }\n  }\n\n  get protocol() {\n    return this[INTERNAL].protocol ?? (this.isSecureEndpoint() ? 'https:' : 'http:');\n  }\n\n  set protocol(v) {\n    if (this[INTERNAL]) {\n      this[INTERNAL].protocol = v;\n    }\n  }\n\n}\n\nexports.Agent = Agent;","map":{"version":3,"mappings":"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","names":["__exportStar","INTERNAL","Symbol","Agent","http","constructor","opts","isSecureEndpoint","options","secureEndpoint","protocol","stack","Error","split","some","l","indexOf","incrementSockets","name","maxSockets","Infinity","maxTotalSockets","sockets","fakeSocket","net","Socket","writable","push","totalSocketCount","decrementSockets","socket","index","splice","length","getName","https_1","prototype","call","createSocket","req","cb","connectOpts","Promise","resolve","then","connect","addRequest","currentSocket","err","createConnection","undefined","defaultPort","v","exports"],"sourceRoot":"","sources":["../src/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}