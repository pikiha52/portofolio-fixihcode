{"ast":null,"code":"import { h } from 'vue';\n\nfunction updateOnVirtualData(swiper) {\n  if (!swiper || swiper.destroyed || !swiper.params.virtual || swiper.params.virtual && !swiper.params.virtual.enabled) return;\n  swiper.updateSlides();\n  swiper.updateProgress();\n  swiper.updateSlidesClasses();\n\n  if (swiper.lazy && swiper.params.lazy.enabled) {\n    swiper.lazy.load();\n  }\n\n  if (swiper.parallax && swiper.params.parallax && swiper.params.parallax.enabled) {\n    swiper.parallax.setTranslate();\n  }\n}\n\nfunction renderVirtual(swiperRef, slides, virtualData) {\n  if (!virtualData) return null;\n  const style = swiperRef.value.isHorizontal() ? {\n    [swiperRef.value.rtlTranslate ? 'right' : 'left']: `${virtualData.offset}px`\n  } : {\n    top: `${virtualData.offset}px`\n  };\n  return slides.filter((slide, index) => index >= virtualData.from && index <= virtualData.to).map(slide => {\n    if (!slide.props) slide.props = {};\n    if (!slide.props.style) slide.props.style = {};\n    slide.props.swiperRef = swiperRef;\n    slide.props.style = style;\n    return h(slide.type, { ...slide.props\n    }, slide.children);\n  });\n}\n\nexport { renderVirtual, updateOnVirtualData };","map":{"version":3,"sources":["/Users/aaaa/Documents/portofolio-fixihcode/node_modules/swiper/vue/virtual.js"],"names":["h","updateOnVirtualData","swiper","destroyed","params","virtual","enabled","updateSlides","updateProgress","updateSlidesClasses","lazy","load","parallax","setTranslate","renderVirtual","swiperRef","slides","virtualData","style","value","isHorizontal","rtlTranslate","offset","top","filter","slide","index","from","to","map","props","type","children"],"mappings":"AAAA,SAASA,CAAT,QAAkB,KAAlB;;AAEA,SAASC,mBAAT,CAA6BC,MAA7B,EAAqC;AACnC,MAAI,CAACA,MAAD,IAAWA,MAAM,CAACC,SAAlB,IAA+B,CAACD,MAAM,CAACE,MAAP,CAAcC,OAA9C,IAAyDH,MAAM,CAACE,MAAP,CAAcC,OAAd,IAAyB,CAACH,MAAM,CAACE,MAAP,CAAcC,OAAd,CAAsBC,OAA7G,EAAsH;AACtHJ,EAAAA,MAAM,CAACK,YAAP;AACAL,EAAAA,MAAM,CAACM,cAAP;AACAN,EAAAA,MAAM,CAACO,mBAAP;;AAEA,MAAIP,MAAM,CAACQ,IAAP,IAAeR,MAAM,CAACE,MAAP,CAAcM,IAAd,CAAmBJ,OAAtC,EAA+C;AAC7CJ,IAAAA,MAAM,CAACQ,IAAP,CAAYC,IAAZ;AACD;;AAED,MAAIT,MAAM,CAACU,QAAP,IAAmBV,MAAM,CAACE,MAAP,CAAcQ,QAAjC,IAA6CV,MAAM,CAACE,MAAP,CAAcQ,QAAd,CAAuBN,OAAxE,EAAiF;AAC/EJ,IAAAA,MAAM,CAACU,QAAP,CAAgBC,YAAhB;AACD;AACF;;AAED,SAASC,aAAT,CAAuBC,SAAvB,EAAkCC,MAAlC,EAA0CC,WAA1C,EAAuD;AACrD,MAAI,CAACA,WAAL,EAAkB,OAAO,IAAP;AAClB,QAAMC,KAAK,GAAGH,SAAS,CAACI,KAAV,CAAgBC,YAAhB,KAAiC;AAC7C,KAACL,SAAS,CAACI,KAAV,CAAgBE,YAAhB,GAA+B,OAA/B,GAAyC,MAA1C,GAAoD,GAAEJ,WAAW,CAACK,MAAO;AAD5B,GAAjC,GAEV;AACFC,IAAAA,GAAG,EAAG,GAAEN,WAAW,CAACK,MAAO;AADzB,GAFJ;AAKA,SAAON,MAAM,CAACQ,MAAP,CAAc,CAACC,KAAD,EAAQC,KAAR,KAAkBA,KAAK,IAAIT,WAAW,CAACU,IAArB,IAA6BD,KAAK,IAAIT,WAAW,CAACW,EAAlF,EAAsFC,GAAtF,CAA0FJ,KAAK,IAAI;AACxG,QAAI,CAACA,KAAK,CAACK,KAAX,EAAkBL,KAAK,CAACK,KAAN,GAAc,EAAd;AAClB,QAAI,CAACL,KAAK,CAACK,KAAN,CAAYZ,KAAjB,EAAwBO,KAAK,CAACK,KAAN,CAAYZ,KAAZ,GAAoB,EAApB;AACxBO,IAAAA,KAAK,CAACK,KAAN,CAAYf,SAAZ,GAAwBA,SAAxB;AACAU,IAAAA,KAAK,CAACK,KAAN,CAAYZ,KAAZ,GAAoBA,KAApB;AACA,WAAOlB,CAAC,CAACyB,KAAK,CAACM,IAAP,EAAa,EAAE,GAAGN,KAAK,CAACK;AAAX,KAAb,EACLL,KAAK,CAACO,QADD,CAAR;AAED,GAPM,CAAP;AAQD;;AAED,SAASlB,aAAT,EAAwBb,mBAAxB","sourcesContent":["import { h } from 'vue';\n\nfunction updateOnVirtualData(swiper) {\n  if (!swiper || swiper.destroyed || !swiper.params.virtual || swiper.params.virtual && !swiper.params.virtual.enabled) return;\n  swiper.updateSlides();\n  swiper.updateProgress();\n  swiper.updateSlidesClasses();\n\n  if (swiper.lazy && swiper.params.lazy.enabled) {\n    swiper.lazy.load();\n  }\n\n  if (swiper.parallax && swiper.params.parallax && swiper.params.parallax.enabled) {\n    swiper.parallax.setTranslate();\n  }\n}\n\nfunction renderVirtual(swiperRef, slides, virtualData) {\n  if (!virtualData) return null;\n  const style = swiperRef.value.isHorizontal() ? {\n    [swiperRef.value.rtlTranslate ? 'right' : 'left']: `${virtualData.offset}px`\n  } : {\n    top: `${virtualData.offset}px`\n  };\n  return slides.filter((slide, index) => index >= virtualData.from && index <= virtualData.to).map(slide => {\n    if (!slide.props) slide.props = {};\n    if (!slide.props.style) slide.props.style = {};\n    slide.props.swiperRef = swiperRef;\n    slide.props.style = style;\n    return h(slide.type, { ...slide.props\n    }, slide.children);\n  });\n}\n\nexport { renderVirtual, updateOnVirtualData };"]},"metadata":{},"sourceType":"module"}