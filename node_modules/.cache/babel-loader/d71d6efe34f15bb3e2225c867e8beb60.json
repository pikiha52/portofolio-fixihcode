{"ast":null,"code":"\"use strict\"; // Copyright 2018 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\n\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar _Gaxios_instances, _a, _Gaxios_urlMayUseProxy, _Gaxios_prepareRequest, _Gaxios_proxyAgent, _Gaxios_getProxyAgent;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Gaxios = void 0;\n\nconst extend_1 = __importDefault(require(\"extend\"));\n\nconst https_1 = require(\"https\");\n\nconst node_fetch_1 = __importDefault(require(\"node-fetch\"));\n\nconst querystring_1 = __importDefault(require(\"querystring\"));\n\nconst is_stream_1 = __importDefault(require(\"is-stream\"));\n\nconst url_1 = require(\"url\");\n\nconst common_1 = require(\"./common\");\n\nconst retry_1 = require(\"./retry\");\n\nconst stream_1 = require(\"stream\");\n\nconst uuid_1 = require(\"uuid\");\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n\nconst fetch = hasFetch() ? window.fetch : node_fetch_1.default;\n\nfunction hasWindow() {\n  return typeof window !== 'undefined' && !!window;\n}\n\nfunction hasFetch() {\n  return hasWindow() && !!window.fetch;\n}\n\nfunction hasBuffer() {\n  return typeof Buffer !== 'undefined';\n}\n\nfunction hasHeader(options, header) {\n  return !!getHeader(options, header);\n}\n\nfunction getHeader(options, header) {\n  header = header.toLowerCase();\n\n  for (const key of Object.keys((options === null || options === void 0 ? void 0 : options.headers) || {})) {\n    if (header === key.toLowerCase()) {\n      return options.headers[key];\n    }\n  }\n\n  return undefined;\n}\n\nclass Gaxios {\n  /**\n   * The Gaxios class is responsible for making HTTP requests.\n   * @param defaults The default set of options to be used for this instance.\n   */\n  constructor(defaults) {\n    _Gaxios_instances.add(this);\n\n    this.agentCache = new Map();\n    this.defaults = defaults || {};\n  }\n  /**\n   * Perform an HTTP request with the given options.\n   * @param opts Set of HTTP options that will be used for this HTTP request.\n   */\n\n\n  async request(opts = {}) {\n    opts = await __classPrivateFieldGet(this, _Gaxios_instances, \"m\", _Gaxios_prepareRequest).call(this, opts);\n    return this._request(opts);\n  }\n\n  async _defaultAdapter(opts) {\n    const fetchImpl = opts.fetchImplementation || fetch;\n    const res = await fetchImpl(opts.url, opts);\n    const data = await this.getResponseData(opts, res);\n    return this.translateResponse(opts, res, data);\n  }\n  /**\n   * Internal, retryable version of the `request` method.\n   * @param opts Set of HTTP options that will be used for this HTTP request.\n   */\n\n\n  async _request(opts = {}) {\n    var _b;\n\n    try {\n      let translatedResponse;\n\n      if (opts.adapter) {\n        translatedResponse = await opts.adapter(opts, this._defaultAdapter.bind(this));\n      } else {\n        translatedResponse = await this._defaultAdapter(opts);\n      }\n\n      if (!opts.validateStatus(translatedResponse.status)) {\n        if (opts.responseType === 'stream') {\n          let response = '';\n          await new Promise(resolve => {\n            (translatedResponse === null || translatedResponse === void 0 ? void 0 : translatedResponse.data).on('data', chunk => {\n              response += chunk;\n            });\n            (translatedResponse === null || translatedResponse === void 0 ? void 0 : translatedResponse.data).on('end', resolve);\n          });\n          translatedResponse.data = response;\n        }\n\n        throw new common_1.GaxiosError(`Request failed with status code ${translatedResponse.status}`, opts, translatedResponse);\n      }\n\n      return translatedResponse;\n    } catch (e) {\n      const err = e instanceof common_1.GaxiosError ? e : new common_1.GaxiosError(e.message, opts, undefined, e);\n      const {\n        shouldRetry,\n        config\n      } = await (0, retry_1.getRetryConfig)(err);\n\n      if (shouldRetry && config) {\n        err.config.retryConfig.currentRetryAttempt = config.retryConfig.currentRetryAttempt; // The error's config could be redacted - therefore we only want to\n        // copy the retry state over to the existing config\n\n        opts.retryConfig = (_b = err.config) === null || _b === void 0 ? void 0 : _b.retryConfig;\n        return this._request(opts);\n      }\n\n      throw err;\n    }\n  }\n\n  async getResponseData(opts, res) {\n    switch (opts.responseType) {\n      case 'stream':\n        return res.body;\n\n      case 'json':\n        {\n          let data = await res.text();\n\n          try {\n            data = JSON.parse(data);\n          } catch (_b) {// continue\n          }\n\n          return data;\n        }\n\n      case 'arraybuffer':\n        return res.arrayBuffer();\n\n      case 'blob':\n        return res.blob();\n\n      case 'text':\n        return res.text();\n\n      default:\n        return this.getResponseDataFromContentType(res);\n    }\n  }\n  /**\n   * By default, throw for any non-2xx status code\n   * @param status status code from the HTTP response\n   */\n\n\n  validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n  /**\n   * Encode a set of key/value pars into a querystring format (?foo=bar&baz=boo)\n   * @param params key value pars to encode\n   */\n\n\n  paramsSerializer(params) {\n    return querystring_1.default.stringify(params);\n  }\n\n  translateResponse(opts, res, data) {\n    // headers need to be converted from a map to an obj\n    const headers = {};\n    res.headers.forEach((value, key) => {\n      headers[key] = value;\n    });\n    return {\n      config: opts,\n      data: data,\n      headers,\n      status: res.status,\n      statusText: res.statusText,\n      // XMLHttpRequestLike\n      request: {\n        responseURL: res.url\n      }\n    };\n  }\n  /**\n   * Attempts to parse a response by looking at the Content-Type header.\n   * @param {FetchResponse} response the HTTP response.\n   * @returns {Promise<any>} a promise that resolves to the response data.\n   */\n\n\n  async getResponseDataFromContentType(response) {\n    let contentType = response.headers.get('Content-Type');\n\n    if (contentType === null) {\n      // Maintain existing functionality by calling text()\n      return response.text();\n    }\n\n    contentType = contentType.toLowerCase();\n\n    if (contentType.includes('application/json')) {\n      let data = await response.text();\n\n      try {\n        data = JSON.parse(data);\n      } catch (_b) {// continue\n      }\n\n      return data;\n    } else if (contentType.match(/^text\\//)) {\n      return response.text();\n    } else {\n      // If the content type is something not easily handled, just return the raw data (blob)\n      return response.blob();\n    }\n  }\n  /**\n   * Creates an async generator that yields the pieces of a multipart/related request body.\n   * This implementation follows the spec: https://www.ietf.org/rfc/rfc2387.txt. However, recursive\n   * multipart/related requests are not currently supported.\n   *\n   * @param {GaxioMultipartOptions[]} multipartOptions the pieces to turn into a multipart/related body.\n   * @param {string} boundary the boundary string to be placed between each part.\n   */\n\n\n  async *getMultipartRequest(multipartOptions, boundary) {\n    const finale = `--${boundary}--`;\n\n    for (const currentPart of multipartOptions) {\n      const partContentType = currentPart.headers['Content-Type'] || 'application/octet-stream';\n      const preamble = `--${boundary}\\r\\nContent-Type: ${partContentType}\\r\\n\\r\\n`;\n      yield preamble;\n\n      if (typeof currentPart.content === 'string') {\n        yield currentPart.content;\n      } else {\n        yield* currentPart.content;\n      }\n\n      yield '\\r\\n';\n    }\n\n    yield finale;\n  }\n\n}\n\nexports.Gaxios = Gaxios;\n_a = Gaxios, _Gaxios_instances = new WeakSet(), _Gaxios_urlMayUseProxy = function _Gaxios_urlMayUseProxy(url, noProxy = []) {\n  var _b, _c;\n\n  const candidate = new url_1.URL(url);\n  const noProxyList = [...noProxy];\n  const noProxyEnvList = ((_c = (_b = process.env.NO_PROXY) !== null && _b !== void 0 ? _b : process.env.no_proxy) === null || _c === void 0 ? void 0 : _c.split(',')) || [];\n\n  for (const rule of noProxyEnvList) {\n    noProxyList.push(rule.trim());\n  }\n\n  for (const rule of noProxyList) {\n    // Match regex\n    if (rule instanceof RegExp) {\n      if (rule.test(candidate.toString())) {\n        return false;\n      }\n    } // Match URL\n    else if (rule instanceof url_1.URL) {\n      if (rule.origin === candidate.origin) {\n        return false;\n      }\n    } // Match string regex\n    else if (rule.startsWith('*.') || rule.startsWith('.')) {\n      const cleanedRule = rule.replace(/^\\*\\./, '.');\n\n      if (candidate.hostname.endsWith(cleanedRule)) {\n        return false;\n      }\n    } // Basic string match\n    else if (rule === candidate.origin || rule === candidate.hostname || rule === candidate.href) {\n      return false;\n    }\n  }\n\n  return true;\n}, _Gaxios_prepareRequest =\n/**\n * Validates the options, merges them with defaults, and prepare request.\n *\n * @param options The original options passed from the client.\n * @returns Prepared options, ready to make a request\n */\nasync function _Gaxios_prepareRequest(options) {\n  var _b, _c, _d, _e;\n\n  const opts = (0, extend_1.default)(true, {}, this.defaults, options);\n\n  if (!opts.url) {\n    throw new Error('URL is required.');\n  } // baseUrl has been deprecated, remove in 2.0\n\n\n  const baseUrl = opts.baseUrl || opts.baseURL;\n\n  if (baseUrl) {\n    opts.url = baseUrl.toString() + opts.url;\n  }\n\n  opts.paramsSerializer = opts.paramsSerializer || this.paramsSerializer;\n\n  if (opts.params && Object.keys(opts.params).length > 0) {\n    let additionalQueryParams = opts.paramsSerializer(opts.params);\n\n    if (additionalQueryParams.startsWith('?')) {\n      additionalQueryParams = additionalQueryParams.slice(1);\n    }\n\n    const prefix = opts.url.toString().includes('?') ? '&' : '?';\n    opts.url = opts.url + prefix + additionalQueryParams;\n  }\n\n  if (typeof options.maxContentLength === 'number') {\n    opts.size = options.maxContentLength;\n  }\n\n  if (typeof options.maxRedirects === 'number') {\n    opts.follow = options.maxRedirects;\n  }\n\n  opts.headers = opts.headers || {};\n\n  if (opts.multipart === undefined && opts.data) {\n    const isFormData = typeof FormData === 'undefined' ? false : (opts === null || opts === void 0 ? void 0 : opts.data) instanceof FormData;\n\n    if (is_stream_1.default.readable(opts.data)) {\n      opts.body = opts.data;\n    } else if (hasBuffer() && Buffer.isBuffer(opts.data)) {\n      // Do not attempt to JSON.stringify() a Buffer:\n      opts.body = opts.data;\n\n      if (!hasHeader(opts, 'Content-Type')) {\n        opts.headers['Content-Type'] = 'application/json';\n      }\n    } else if (typeof opts.data === 'object') {\n      // If www-form-urlencoded content type has been set, but data is\n      // provided as an object, serialize the content using querystring:\n      if (!isFormData) {\n        if (getHeader(opts, 'content-type') === 'application/x-www-form-urlencoded') {\n          opts.body = opts.paramsSerializer(opts.data);\n        } else {\n          // } else if (!(opts.data instanceof FormData)) {\n          if (!hasHeader(opts, 'Content-Type')) {\n            opts.headers['Content-Type'] = 'application/json';\n          }\n\n          opts.body = JSON.stringify(opts.data);\n        }\n      }\n    } else {\n      opts.body = opts.data;\n    }\n  } else if (opts.multipart && opts.multipart.length > 0) {\n    // note: once the minimum version reaches Node 16,\n    // this can be replaced with randomUUID() function from crypto\n    // and the dependency on UUID removed\n    const boundary = (0, uuid_1.v4)();\n    opts.headers['Content-Type'] = `multipart/related; boundary=${boundary}`;\n    const bodyStream = new stream_1.PassThrough();\n    opts.body = bodyStream;\n    (0, stream_1.pipeline)(this.getMultipartRequest(opts.multipart, boundary), bodyStream, () => {});\n  }\n\n  opts.validateStatus = opts.validateStatus || this.validateStatus;\n  opts.responseType = opts.responseType || 'unknown';\n\n  if (!opts.headers['Accept'] && opts.responseType === 'json') {\n    opts.headers['Accept'] = 'application/json';\n  }\n\n  opts.method = opts.method || 'GET';\n  const proxy = opts.proxy || ((_b = process === null || process === void 0 ? void 0 : process.env) === null || _b === void 0 ? void 0 : _b.HTTPS_PROXY) || ((_c = process === null || process === void 0 ? void 0 : process.env) === null || _c === void 0 ? void 0 : _c.https_proxy) || ((_d = process === null || process === void 0 ? void 0 : process.env) === null || _d === void 0 ? void 0 : _d.HTTP_PROXY) || ((_e = process === null || process === void 0 ? void 0 : process.env) === null || _e === void 0 ? void 0 : _e.http_proxy);\n\n  const urlMayUseProxy = __classPrivateFieldGet(this, _Gaxios_instances, \"m\", _Gaxios_urlMayUseProxy).call(this, opts.url, opts.noProxy);\n\n  if (opts.agent) {// don't do any of the following options - use the user-provided agent.\n  } else if (proxy && urlMayUseProxy) {\n    const HttpsProxyAgent = await __classPrivateFieldGet(_a, _a, \"m\", _Gaxios_getProxyAgent).call(_a);\n\n    if (this.agentCache.has(proxy)) {\n      opts.agent = this.agentCache.get(proxy);\n    } else {\n      opts.agent = new HttpsProxyAgent(proxy, {\n        cert: opts.cert,\n        key: opts.key\n      });\n      this.agentCache.set(proxy, opts.agent);\n    }\n  } else if (opts.cert && opts.key) {\n    // Configure client for mTLS\n    if (this.agentCache.has(opts.key)) {\n      opts.agent = this.agentCache.get(opts.key);\n    } else {\n      opts.agent = new https_1.Agent({\n        cert: opts.cert,\n        key: opts.key\n      });\n      this.agentCache.set(opts.key, opts.agent);\n    }\n  }\n\n  if (typeof opts.errorRedactor !== 'function' && opts.errorRedactor !== false) {\n    opts.errorRedactor = common_1.defaultErrorRedactor;\n  }\n\n  return opts;\n}, _Gaxios_getProxyAgent = async function _Gaxios_getProxyAgent() {\n  __classPrivateFieldSet(this, _a, __classPrivateFieldGet(this, _a, \"f\", _Gaxios_proxyAgent) || (await Promise.resolve().then(() => __importStar(require('https-proxy-agent')))).HttpsProxyAgent, \"f\", _Gaxios_proxyAgent);\n\n  return __classPrivateFieldGet(this, _a, \"f\", _Gaxios_proxyAgent);\n};\n/**\n * A cache for the lazily-loaded proxy agent.\n *\n * Should use {@link Gaxios[#getProxyAgent]} to retrieve.\n */\n// using `import` to dynamically import the types here\n\n_Gaxios_proxyAgent = {\n  value: void 0\n};","map":{"version":3,"mappings":"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","names":["fetch","hasFetch","window","node_fetch_1","hasWindow","hasBuffer","Buffer","hasHeader","options","header","getHeader","toLowerCase","key","Object","keys","headers","undefined","Gaxios","constructor","defaults","Map","request","opts","__classPrivateFieldGet","_Gaxios_instances","_Gaxios_prepareRequest","call","_request","_defaultAdapter","fetchImpl","fetchImplementation","res","url","data","getResponseData","translateResponse","translatedResponse","adapter","bind","validateStatus","status","responseType","response","Promise","resolve","on","chunk","common_1","e","err","message","shouldRetry","config","retryConfig","currentRetryAttempt","_b","body","text","JSON","parse","arrayBuffer","blob","getResponseDataFromContentType","paramsSerializer","params","querystring_1","stringify","forEach","value","statusText","responseURL","contentType","get","includes","match","getMultipartRequest","multipartOptions","boundary","finale","currentPart","partContentType","preamble","content","exports","noProxy","candidate","url_1","noProxyList","noProxyEnvList","env","NO_PROXY","process","no_proxy","_c","split","rule","push","trim","RegExp","test","toString","origin","startsWith","cleanedRule","replace","hostname","endsWith","href","Error","baseUrl","baseURL","length","additionalQueryParams","slice","prefix","maxContentLength","size","maxRedirects","follow","multipart","isFormData","FormData","is_stream_1","readable","isBuffer","bodyStream","stream_1","method","proxy","HTTPS_PROXY","https_proxy","_d","HTTP_PROXY","_e","http_proxy","urlMayUseProxy","_Gaxios_urlMayUseProxy","agent","HttpsProxyAgent","_a","_Gaxios_getProxyAgent","agentCache","has","cert","set","https_1","errorRedactor","__classPrivateFieldSet","_Gaxios_proxyAgent"],"sourceRoot":"","sources":["../../src/gaxios.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}