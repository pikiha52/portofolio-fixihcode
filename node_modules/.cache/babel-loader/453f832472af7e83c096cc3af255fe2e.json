{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2018 Google LLC\n *\n * Distributed under MIT license.\n * See file LICENSE for detail or copy at https://opensource.org/licenses/MIT\n */\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\n\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\n\nvar _GoogleToken_instances, _GoogleToken_inFlightRequest, _GoogleToken_getTokenAsync, _GoogleToken_getTokenAsyncInner, _GoogleToken_ensureEmail, _GoogleToken_revokeTokenAsync, _GoogleToken_configure, _GoogleToken_requestToken;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GoogleToken = void 0;\n\nconst fs = require(\"fs\");\n\nconst gaxios_1 = require(\"gaxios\");\n\nconst jws = require(\"jws\");\n\nconst path = require(\"path\");\n\nconst util_1 = require(\"util\");\n\nconst readFile = fs.readFile ? (0, util_1.promisify)(fs.readFile) : async () => {\n  // if running in the web-browser, fs.readFile may not have been shimmed.\n  throw new ErrorWithCode('use key rather than keyFile.', 'MISSING_CREDENTIALS');\n};\nconst GOOGLE_TOKEN_URL = 'https://www.googleapis.com/oauth2/v4/token';\nconst GOOGLE_REVOKE_TOKEN_URL = 'https://accounts.google.com/o/oauth2/revoke?token=';\n\nclass ErrorWithCode extends Error {\n  constructor(message, code) {\n    super(message);\n    this.code = code;\n  }\n\n}\n\nclass GoogleToken {\n  get accessToken() {\n    return this.rawToken ? this.rawToken.access_token : undefined;\n  }\n\n  get idToken() {\n    return this.rawToken ? this.rawToken.id_token : undefined;\n  }\n\n  get tokenType() {\n    return this.rawToken ? this.rawToken.token_type : undefined;\n  }\n\n  get refreshToken() {\n    return this.rawToken ? this.rawToken.refresh_token : undefined;\n  }\n  /**\n   * Create a GoogleToken.\n   *\n   * @param options  Configuration object.\n   */\n\n\n  constructor(options) {\n    _GoogleToken_instances.add(this);\n\n    this.transporter = {\n      request: opts => (0, gaxios_1.request)(opts)\n    };\n\n    _GoogleToken_inFlightRequest.set(this, void 0);\n\n    __classPrivateFieldGet(this, _GoogleToken_instances, \"m\", _GoogleToken_configure).call(this, options);\n  }\n  /**\n   * Returns whether the token has expired.\n   *\n   * @return true if the token has expired, false otherwise.\n   */\n\n\n  hasExpired() {\n    const now = new Date().getTime();\n\n    if (this.rawToken && this.expiresAt) {\n      return now >= this.expiresAt;\n    } else {\n      return true;\n    }\n  }\n  /**\n   * Returns whether the token will expire within eagerRefreshThresholdMillis\n   *\n   * @return true if the token will be expired within eagerRefreshThresholdMillis, false otherwise.\n   */\n\n\n  isTokenExpiring() {\n    var _a;\n\n    const now = new Date().getTime();\n    const eagerRefreshThresholdMillis = (_a = this.eagerRefreshThresholdMillis) !== null && _a !== void 0 ? _a : 0;\n\n    if (this.rawToken && this.expiresAt) {\n      return this.expiresAt <= now + eagerRefreshThresholdMillis;\n    } else {\n      return true;\n    }\n  }\n\n  getToken(callback, opts = {}) {\n    if (typeof callback === 'object') {\n      opts = callback;\n      callback = undefined;\n    }\n\n    opts = Object.assign({\n      forceRefresh: false\n    }, opts);\n\n    if (callback) {\n      const cb = callback;\n\n      __classPrivateFieldGet(this, _GoogleToken_instances, \"m\", _GoogleToken_getTokenAsync).call(this, opts).then(t => cb(null, t), callback);\n\n      return;\n    }\n\n    return __classPrivateFieldGet(this, _GoogleToken_instances, \"m\", _GoogleToken_getTokenAsync).call(this, opts);\n  }\n  /**\n   * Given a keyFile, extract the key and client email if available\n   * @param keyFile Path to a json, pem, or p12 file that contains the key.\n   * @returns an object with privateKey and clientEmail properties\n   */\n\n\n  async getCredentials(keyFile) {\n    const ext = path.extname(keyFile);\n\n    switch (ext) {\n      case '.json':\n        {\n          const key = await readFile(keyFile, 'utf8');\n          const body = JSON.parse(key);\n          const privateKey = body.private_key;\n          const clientEmail = body.client_email;\n\n          if (!privateKey || !clientEmail) {\n            throw new ErrorWithCode('private_key and client_email are required.', 'MISSING_CREDENTIALS');\n          }\n\n          return {\n            privateKey,\n            clientEmail\n          };\n        }\n\n      case '.der':\n      case '.crt':\n      case '.pem':\n        {\n          const privateKey = await readFile(keyFile, 'utf8');\n          return {\n            privateKey\n          };\n        }\n\n      case '.p12':\n      case '.pfx':\n        {\n          throw new ErrorWithCode('*.p12 certificates are not supported after v6.1.2. ' + 'Consider utilizing *.json format or converting *.p12 to *.pem using the OpenSSL CLI.', 'UNKNOWN_CERTIFICATE_TYPE');\n        }\n\n      default:\n        throw new ErrorWithCode('Unknown certificate type. Type is determined based on file extension. ' + 'Current supported extensions are *.json, and *.pem.', 'UNKNOWN_CERTIFICATE_TYPE');\n    }\n  }\n\n  revokeToken(callback) {\n    if (callback) {\n      __classPrivateFieldGet(this, _GoogleToken_instances, \"m\", _GoogleToken_revokeTokenAsync).call(this).then(() => callback(), callback);\n\n      return;\n    }\n\n    return __classPrivateFieldGet(this, _GoogleToken_instances, \"m\", _GoogleToken_revokeTokenAsync).call(this);\n  }\n\n}\n\nexports.GoogleToken = GoogleToken;\n_GoogleToken_inFlightRequest = new WeakMap(), _GoogleToken_instances = new WeakSet(), _GoogleToken_getTokenAsync = async function _GoogleToken_getTokenAsync(opts) {\n  if (__classPrivateFieldGet(this, _GoogleToken_inFlightRequest, \"f\") && !opts.forceRefresh) {\n    return __classPrivateFieldGet(this, _GoogleToken_inFlightRequest, \"f\");\n  }\n\n  try {\n    return await __classPrivateFieldSet(this, _GoogleToken_inFlightRequest, __classPrivateFieldGet(this, _GoogleToken_instances, \"m\", _GoogleToken_getTokenAsyncInner).call(this, opts), \"f\");\n  } finally {\n    __classPrivateFieldSet(this, _GoogleToken_inFlightRequest, undefined, \"f\");\n  }\n}, _GoogleToken_getTokenAsyncInner = async function _GoogleToken_getTokenAsyncInner(opts) {\n  if (this.isTokenExpiring() === false && opts.forceRefresh === false) {\n    return Promise.resolve(this.rawToken);\n  }\n\n  if (!this.key && !this.keyFile) {\n    throw new Error('No key or keyFile set.');\n  }\n\n  if (!this.key && this.keyFile) {\n    const creds = await this.getCredentials(this.keyFile);\n    this.key = creds.privateKey;\n    this.iss = creds.clientEmail || this.iss;\n\n    if (!creds.clientEmail) {\n      __classPrivateFieldGet(this, _GoogleToken_instances, \"m\", _GoogleToken_ensureEmail).call(this);\n    }\n  }\n\n  return __classPrivateFieldGet(this, _GoogleToken_instances, \"m\", _GoogleToken_requestToken).call(this);\n}, _GoogleToken_ensureEmail = function _GoogleToken_ensureEmail() {\n  if (!this.iss) {\n    throw new ErrorWithCode('email is required.', 'MISSING_CREDENTIALS');\n  }\n}, _GoogleToken_revokeTokenAsync = async function _GoogleToken_revokeTokenAsync() {\n  if (!this.accessToken) {\n    throw new Error('No token to revoke.');\n  }\n\n  const url = GOOGLE_REVOKE_TOKEN_URL + this.accessToken;\n  await this.transporter.request({\n    url,\n    retry: true\n  });\n\n  __classPrivateFieldGet(this, _GoogleToken_instances, \"m\", _GoogleToken_configure).call(this, {\n    email: this.iss,\n    sub: this.sub,\n    key: this.key,\n    keyFile: this.keyFile,\n    scope: this.scope,\n    additionalClaims: this.additionalClaims\n  });\n}, _GoogleToken_configure = function _GoogleToken_configure(options = {}) {\n  this.keyFile = options.keyFile;\n  this.key = options.key;\n  this.rawToken = undefined;\n  this.iss = options.email || options.iss;\n  this.sub = options.sub;\n  this.additionalClaims = options.additionalClaims;\n\n  if (typeof options.scope === 'object') {\n    this.scope = options.scope.join(' ');\n  } else {\n    this.scope = options.scope;\n  }\n\n  this.eagerRefreshThresholdMillis = options.eagerRefreshThresholdMillis;\n\n  if (options.transporter) {\n    this.transporter = options.transporter;\n  }\n}, _GoogleToken_requestToken =\n/**\n * Request the token from Google.\n */\nasync function _GoogleToken_requestToken() {\n  var _a, _b;\n\n  const iat = Math.floor(new Date().getTime() / 1000);\n  const additionalClaims = this.additionalClaims || {};\n  const payload = Object.assign({\n    iss: this.iss,\n    scope: this.scope,\n    aud: GOOGLE_TOKEN_URL,\n    exp: iat + 3600,\n    iat,\n    sub: this.sub\n  }, additionalClaims);\n  const signedJWT = jws.sign({\n    header: {\n      alg: 'RS256'\n    },\n    payload,\n    secret: this.key\n  });\n\n  try {\n    const r = await this.transporter.request({\n      method: 'POST',\n      url: GOOGLE_TOKEN_URL,\n      data: {\n        grant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',\n        assertion: signedJWT\n      },\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      responseType: 'json',\n      retryConfig: {\n        httpMethodsToRetry: ['POST']\n      }\n    });\n    this.rawToken = r.data;\n    this.expiresAt = r.data.expires_in === null || r.data.expires_in === undefined ? undefined : (iat + r.data.expires_in) * 1000;\n    return this.rawToken;\n  } catch (e) {\n    this.rawToken = undefined;\n    this.tokenExpires = undefined;\n    const body = e.response && ((_a = e.response) === null || _a === void 0 ? void 0 : _a.data) ? (_b = e.response) === null || _b === void 0 ? void 0 : _b.data : {};\n\n    if (body.error) {\n      const desc = body.error_description ? `: ${body.error_description}` : '';\n      e.message = `${body.error}${desc}`;\n    }\n\n    throw e;\n  }\n};","map":{"version":3,"sources":["/Users/fikihalan/Documents/source/frontend/portofolio-fixihcode/node_modules/gtoken/build/src/index.js"],"names":["__classPrivateFieldGet","receiver","state","kind","f","TypeError","has","call","value","get","__classPrivateFieldSet","set","_GoogleToken_instances","_GoogleToken_inFlightRequest","_GoogleToken_getTokenAsync","_GoogleToken_getTokenAsyncInner","_GoogleToken_ensureEmail","_GoogleToken_revokeTokenAsync","_GoogleToken_configure","_GoogleToken_requestToken","Object","defineProperty","exports","GoogleToken","fs","require","gaxios_1","jws","path","util_1","readFile","promisify","ErrorWithCode","GOOGLE_TOKEN_URL","GOOGLE_REVOKE_TOKEN_URL","Error","constructor","message","code","accessToken","rawToken","access_token","undefined","idToken","id_token","tokenType","token_type","refreshToken","refresh_token","options","add","transporter","request","opts","hasExpired","now","Date","getTime","expiresAt","isTokenExpiring","_a","eagerRefreshThresholdMillis","getToken","callback","assign","forceRefresh","cb","then","t","getCredentials","keyFile","ext","extname","key","body","JSON","parse","privateKey","private_key","clientEmail","client_email","revokeToken","WeakMap","WeakSet","Promise","resolve","creds","iss","url","retry","email","sub","scope","additionalClaims","join","_b","iat","Math","floor","payload","aud","exp","signedJWT","sign","header","alg","secret","r","method","data","grant_type","assertion","headers","responseType","retryConfig","httpMethodsToRetry","expires_in","e","tokenExpires","response","error","desc","error_description"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2018 Google LLC\n *\n * Distributed under MIT license.\n * See file LICENSE for detail or copy at https://opensource.org/licenses/MIT\n */\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _GoogleToken_instances, _GoogleToken_inFlightRequest, _GoogleToken_getTokenAsync, _GoogleToken_getTokenAsyncInner, _GoogleToken_ensureEmail, _GoogleToken_revokeTokenAsync, _GoogleToken_configure, _GoogleToken_requestToken;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GoogleToken = void 0;\nconst fs = require(\"fs\");\nconst gaxios_1 = require(\"gaxios\");\nconst jws = require(\"jws\");\nconst path = require(\"path\");\nconst util_1 = require(\"util\");\nconst readFile = fs.readFile\n    ? (0, util_1.promisify)(fs.readFile)\n    : async () => {\n        // if running in the web-browser, fs.readFile may not have been shimmed.\n        throw new ErrorWithCode('use key rather than keyFile.', 'MISSING_CREDENTIALS');\n    };\nconst GOOGLE_TOKEN_URL = 'https://www.googleapis.com/oauth2/v4/token';\nconst GOOGLE_REVOKE_TOKEN_URL = 'https://accounts.google.com/o/oauth2/revoke?token=';\nclass ErrorWithCode extends Error {\n    constructor(message, code) {\n        super(message);\n        this.code = code;\n    }\n}\nclass GoogleToken {\n    get accessToken() {\n        return this.rawToken ? this.rawToken.access_token : undefined;\n    }\n    get idToken() {\n        return this.rawToken ? this.rawToken.id_token : undefined;\n    }\n    get tokenType() {\n        return this.rawToken ? this.rawToken.token_type : undefined;\n    }\n    get refreshToken() {\n        return this.rawToken ? this.rawToken.refresh_token : undefined;\n    }\n    /**\n     * Create a GoogleToken.\n     *\n     * @param options  Configuration object.\n     */\n    constructor(options) {\n        _GoogleToken_instances.add(this);\n        this.transporter = {\n            request: opts => (0, gaxios_1.request)(opts),\n        };\n        _GoogleToken_inFlightRequest.set(this, void 0);\n        __classPrivateFieldGet(this, _GoogleToken_instances, \"m\", _GoogleToken_configure).call(this, options);\n    }\n    /**\n     * Returns whether the token has expired.\n     *\n     * @return true if the token has expired, false otherwise.\n     */\n    hasExpired() {\n        const now = new Date().getTime();\n        if (this.rawToken && this.expiresAt) {\n            return now >= this.expiresAt;\n        }\n        else {\n            return true;\n        }\n    }\n    /**\n     * Returns whether the token will expire within eagerRefreshThresholdMillis\n     *\n     * @return true if the token will be expired within eagerRefreshThresholdMillis, false otherwise.\n     */\n    isTokenExpiring() {\n        var _a;\n        const now = new Date().getTime();\n        const eagerRefreshThresholdMillis = (_a = this.eagerRefreshThresholdMillis) !== null && _a !== void 0 ? _a : 0;\n        if (this.rawToken && this.expiresAt) {\n            return this.expiresAt <= now + eagerRefreshThresholdMillis;\n        }\n        else {\n            return true;\n        }\n    }\n    getToken(callback, opts = {}) {\n        if (typeof callback === 'object') {\n            opts = callback;\n            callback = undefined;\n        }\n        opts = Object.assign({\n            forceRefresh: false,\n        }, opts);\n        if (callback) {\n            const cb = callback;\n            __classPrivateFieldGet(this, _GoogleToken_instances, \"m\", _GoogleToken_getTokenAsync).call(this, opts).then(t => cb(null, t), callback);\n            return;\n        }\n        return __classPrivateFieldGet(this, _GoogleToken_instances, \"m\", _GoogleToken_getTokenAsync).call(this, opts);\n    }\n    /**\n     * Given a keyFile, extract the key and client email if available\n     * @param keyFile Path to a json, pem, or p12 file that contains the key.\n     * @returns an object with privateKey and clientEmail properties\n     */\n    async getCredentials(keyFile) {\n        const ext = path.extname(keyFile);\n        switch (ext) {\n            case '.json': {\n                const key = await readFile(keyFile, 'utf8');\n                const body = JSON.parse(key);\n                const privateKey = body.private_key;\n                const clientEmail = body.client_email;\n                if (!privateKey || !clientEmail) {\n                    throw new ErrorWithCode('private_key and client_email are required.', 'MISSING_CREDENTIALS');\n                }\n                return { privateKey, clientEmail };\n            }\n            case '.der':\n            case '.crt':\n            case '.pem': {\n                const privateKey = await readFile(keyFile, 'utf8');\n                return { privateKey };\n            }\n            case '.p12':\n            case '.pfx': {\n                throw new ErrorWithCode('*.p12 certificates are not supported after v6.1.2. ' +\n                    'Consider utilizing *.json format or converting *.p12 to *.pem using the OpenSSL CLI.', 'UNKNOWN_CERTIFICATE_TYPE');\n            }\n            default:\n                throw new ErrorWithCode('Unknown certificate type. Type is determined based on file extension. ' +\n                    'Current supported extensions are *.json, and *.pem.', 'UNKNOWN_CERTIFICATE_TYPE');\n        }\n    }\n    revokeToken(callback) {\n        if (callback) {\n            __classPrivateFieldGet(this, _GoogleToken_instances, \"m\", _GoogleToken_revokeTokenAsync).call(this).then(() => callback(), callback);\n            return;\n        }\n        return __classPrivateFieldGet(this, _GoogleToken_instances, \"m\", _GoogleToken_revokeTokenAsync).call(this);\n    }\n}\nexports.GoogleToken = GoogleToken;\n_GoogleToken_inFlightRequest = new WeakMap(), _GoogleToken_instances = new WeakSet(), _GoogleToken_getTokenAsync = async function _GoogleToken_getTokenAsync(opts) {\n    if (__classPrivateFieldGet(this, _GoogleToken_inFlightRequest, \"f\") && !opts.forceRefresh) {\n        return __classPrivateFieldGet(this, _GoogleToken_inFlightRequest, \"f\");\n    }\n    try {\n        return await (__classPrivateFieldSet(this, _GoogleToken_inFlightRequest, __classPrivateFieldGet(this, _GoogleToken_instances, \"m\", _GoogleToken_getTokenAsyncInner).call(this, opts), \"f\"));\n    }\n    finally {\n        __classPrivateFieldSet(this, _GoogleToken_inFlightRequest, undefined, \"f\");\n    }\n}, _GoogleToken_getTokenAsyncInner = async function _GoogleToken_getTokenAsyncInner(opts) {\n    if (this.isTokenExpiring() === false && opts.forceRefresh === false) {\n        return Promise.resolve(this.rawToken);\n    }\n    if (!this.key && !this.keyFile) {\n        throw new Error('No key or keyFile set.');\n    }\n    if (!this.key && this.keyFile) {\n        const creds = await this.getCredentials(this.keyFile);\n        this.key = creds.privateKey;\n        this.iss = creds.clientEmail || this.iss;\n        if (!creds.clientEmail) {\n            __classPrivateFieldGet(this, _GoogleToken_instances, \"m\", _GoogleToken_ensureEmail).call(this);\n        }\n    }\n    return __classPrivateFieldGet(this, _GoogleToken_instances, \"m\", _GoogleToken_requestToken).call(this);\n}, _GoogleToken_ensureEmail = function _GoogleToken_ensureEmail() {\n    if (!this.iss) {\n        throw new ErrorWithCode('email is required.', 'MISSING_CREDENTIALS');\n    }\n}, _GoogleToken_revokeTokenAsync = async function _GoogleToken_revokeTokenAsync() {\n    if (!this.accessToken) {\n        throw new Error('No token to revoke.');\n    }\n    const url = GOOGLE_REVOKE_TOKEN_URL + this.accessToken;\n    await this.transporter.request({\n        url,\n        retry: true,\n    });\n    __classPrivateFieldGet(this, _GoogleToken_instances, \"m\", _GoogleToken_configure).call(this, {\n        email: this.iss,\n        sub: this.sub,\n        key: this.key,\n        keyFile: this.keyFile,\n        scope: this.scope,\n        additionalClaims: this.additionalClaims,\n    });\n}, _GoogleToken_configure = function _GoogleToken_configure(options = {}) {\n    this.keyFile = options.keyFile;\n    this.key = options.key;\n    this.rawToken = undefined;\n    this.iss = options.email || options.iss;\n    this.sub = options.sub;\n    this.additionalClaims = options.additionalClaims;\n    if (typeof options.scope === 'object') {\n        this.scope = options.scope.join(' ');\n    }\n    else {\n        this.scope = options.scope;\n    }\n    this.eagerRefreshThresholdMillis = options.eagerRefreshThresholdMillis;\n    if (options.transporter) {\n        this.transporter = options.transporter;\n    }\n}, _GoogleToken_requestToken = \n/**\n * Request the token from Google.\n */\nasync function _GoogleToken_requestToken() {\n    var _a, _b;\n    const iat = Math.floor(new Date().getTime() / 1000);\n    const additionalClaims = this.additionalClaims || {};\n    const payload = Object.assign({\n        iss: this.iss,\n        scope: this.scope,\n        aud: GOOGLE_TOKEN_URL,\n        exp: iat + 3600,\n        iat,\n        sub: this.sub,\n    }, additionalClaims);\n    const signedJWT = jws.sign({\n        header: { alg: 'RS256' },\n        payload,\n        secret: this.key,\n    });\n    try {\n        const r = await this.transporter.request({\n            method: 'POST',\n            url: GOOGLE_TOKEN_URL,\n            data: {\n                grant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',\n                assertion: signedJWT,\n            },\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            responseType: 'json',\n            retryConfig: {\n                httpMethodsToRetry: ['POST'],\n            },\n        });\n        this.rawToken = r.data;\n        this.expiresAt =\n            r.data.expires_in === null || r.data.expires_in === undefined\n                ? undefined\n                : (iat + r.data.expires_in) * 1000;\n        return this.rawToken;\n    }\n    catch (e) {\n        this.rawToken = undefined;\n        this.tokenExpires = undefined;\n        const body = e.response && ((_a = e.response) === null || _a === void 0 ? void 0 : _a.data)\n            ? (_b = e.response) === null || _b === void 0 ? void 0 : _b.data\n            : {};\n        if (body.error) {\n            const desc = body.error_description\n                ? `: ${body.error_description}`\n                : '';\n            e.message = `${body.error}${desc}`;\n        }\n        throw e;\n    }\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}