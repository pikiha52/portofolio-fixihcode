{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HttpsProxyAgent = void 0;\n\nconst net = __importStar(require(\"net\"));\n\nconst tls = __importStar(require(\"tls\"));\n\nconst assert_1 = __importDefault(require(\"assert\"));\n\nconst debug_1 = __importDefault(require(\"debug\"));\n\nconst agent_base_1 = require(\"agent-base\");\n\nconst url_1 = require(\"url\");\n\nconst parse_proxy_response_1 = require(\"./parse-proxy-response\");\n\nconst debug = (0, debug_1.default)('https-proxy-agent');\n/**\n * The `HttpsProxyAgent` implements an HTTP Agent subclass that connects to\n * the specified \"HTTP(s) proxy server\" in order to proxy HTTPS requests.\n *\n * Outgoing HTTP requests are first tunneled through the proxy server using the\n * `CONNECT` HTTP request method to establish a connection to the proxy server,\n * and then the proxy server connects to the destination target and issues the\n * HTTP request from the proxy server.\n *\n * `https:` requests have their socket connection upgraded to TLS once\n * the connection to the proxy server has been established.\n */\n\nclass HttpsProxyAgent extends agent_base_1.Agent {\n  constructor(proxy, opts) {\n    super(opts);\n    this.options = {\n      path: undefined\n    };\n    this.proxy = typeof proxy === 'string' ? new url_1.URL(proxy) : proxy;\n    this.proxyHeaders = opts?.headers ?? {};\n    debug('Creating new HttpsProxyAgent instance: %o', this.proxy.href); // Trim off the brackets from IPv6 addresses\n\n    const host = (this.proxy.hostname || this.proxy.host).replace(/^\\[|\\]$/g, '');\n    const port = this.proxy.port ? parseInt(this.proxy.port, 10) : this.proxy.protocol === 'https:' ? 443 : 80;\n    this.connectOpts = {\n      // Attempt to negotiate http/1.1 for proxy servers that support http/2\n      ALPNProtocols: ['http/1.1'],\n      ...(opts ? omit(opts, 'headers') : null),\n      host,\n      port\n    };\n  }\n  /**\n   * Called when the node-core HTTP client library is creating a\n   * new HTTP request.\n   */\n\n\n  async connect(req, opts) {\n    const {\n      proxy\n    } = this;\n\n    if (!opts.host) {\n      throw new TypeError('No \"host\" provided');\n    } // Create a socket connection to the proxy server.\n\n\n    let socket;\n\n    if (proxy.protocol === 'https:') {\n      debug('Creating `tls.Socket`: %o', this.connectOpts);\n      const servername = this.connectOpts.servername || this.connectOpts.host;\n      socket = tls.connect({ ...this.connectOpts,\n        servername: servername && net.isIP(servername) ? undefined : servername\n      });\n    } else {\n      debug('Creating `net.Socket`: %o', this.connectOpts);\n      socket = net.connect(this.connectOpts);\n    }\n\n    const headers = typeof this.proxyHeaders === 'function' ? this.proxyHeaders() : { ...this.proxyHeaders\n    };\n    const host = net.isIPv6(opts.host) ? `[${opts.host}]` : opts.host;\n    let payload = `CONNECT ${host}:${opts.port} HTTP/1.1\\r\\n`; // Inject the `Proxy-Authorization` header if necessary.\n\n    if (proxy.username || proxy.password) {\n      const auth = `${decodeURIComponent(proxy.username)}:${decodeURIComponent(proxy.password)}`;\n      headers['Proxy-Authorization'] = `Basic ${Buffer.from(auth).toString('base64')}`;\n    }\n\n    headers.Host = `${host}:${opts.port}`;\n\n    if (!headers['Proxy-Connection']) {\n      headers['Proxy-Connection'] = this.keepAlive ? 'Keep-Alive' : 'close';\n    }\n\n    for (const name of Object.keys(headers)) {\n      payload += `${name}: ${headers[name]}\\r\\n`;\n    }\n\n    const proxyResponsePromise = (0, parse_proxy_response_1.parseProxyResponse)(socket);\n    socket.write(`${payload}\\r\\n`);\n    const {\n      connect,\n      buffered\n    } = await proxyResponsePromise;\n    req.emit('proxyConnect', connect);\n    this.emit('proxyConnect', connect, req);\n\n    if (connect.statusCode === 200) {\n      req.once('socket', resume);\n\n      if (opts.secureEndpoint) {\n        // The proxy is connecting to a TLS server, so upgrade\n        // this socket connection to a TLS connection.\n        debug('Upgrading socket connection to TLS');\n        const servername = opts.servername || opts.host;\n        return tls.connect({ ...omit(opts, 'host', 'path', 'port'),\n          socket,\n          servername: net.isIP(servername) ? undefined : servername\n        });\n      }\n\n      return socket;\n    } // Some other status code that's not 200... need to re-play the HTTP\n    // header \"data\" events onto the socket once the HTTP machinery is\n    // attached so that the node core `http` can parse and handle the\n    // error status code.\n    // Close the original socket, and a new \"fake\" socket is returned\n    // instead, so that the proxy doesn't get the HTTP request\n    // written to it (which may contain `Authorization` headers or other\n    // sensitive data).\n    //\n    // See: https://hackerone.com/reports/541502\n\n\n    socket.destroy();\n    const fakeSocket = new net.Socket({\n      writable: false\n    });\n    fakeSocket.readable = true; // Need to wait for the \"socket\" event to re-play the \"data\" events.\n\n    req.once('socket', s => {\n      debug('Replaying proxy buffer for failed request');\n      (0, assert_1.default)(s.listenerCount('data') > 0); // Replay the \"buffered\" Buffer onto the fake `socket`, since at\n      // this point the HTTP module machinery has been hooked up for\n      // the user.\n\n      s.push(buffered);\n      s.push(null);\n    });\n    return fakeSocket;\n  }\n\n}\n\nHttpsProxyAgent.protocols = ['http', 'https'];\nexports.HttpsProxyAgent = HttpsProxyAgent;\n\nfunction resume(socket) {\n  socket.resume();\n}\n\nfunction omit(obj, ...keys) {\n  const ret = {};\n  let key;\n\n  for (key in obj) {\n    if (!keys.includes(key)) {\n      ret[key] = obj[key];\n    }\n  }\n\n  return ret;\n}","map":{"version":3,"mappings":"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","names":["debug","HttpsProxyAgent","agent_base_1","constructor","proxy","opts","options","path","undefined","url_1","proxyHeaders","headers","href","host","hostname","replace","port","parseInt","protocol","connectOpts","ALPNProtocols","omit","connect","req","TypeError","socket","servername","tls","net","isIP","isIPv6","payload","username","password","auth","decodeURIComponent","Buffer","from","toString","Host","keepAlive","name","Object","keys","proxyResponsePromise","write","buffered","emit","statusCode","once","resume","secureEndpoint","destroy","fakeSocket","Socket","writable","readable","s","listenerCount","push","exports","obj","ret","key","includes"],"sourceRoot":"","sources":["../src/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}